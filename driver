#!/usr/bin/python3

import datetime
import psycopg2
import sqlalchemy 
import random

from sqlalchemy import create_engine
from sqlalchemy import text 

TIME = datetime.datetime.now()

def get_engine():

    # dialect[+driver]://user:password@host/dbname[?key=value..]
    engine = create_engine("postgresql+psycopg2://admin:p0stdev@0.0.0.0", echo=True)
    return engine

def create_table(table):
    
    db = get_engine()
    with db.connect() as conn:
        try:     
            conn.execute(text(f"CREATE TABLE {table} (date int,sets int, reps int, weight int)"))
            conn.commit()
        except e as Exception:
            print(f"table {table} already exists \n {e}")

def insert_into_table(table):
    
    db = get_engine()

    with db.connect() as conn:
    
        conn.execute(
            text(f"INSERT INTO {table} (date, sets, reps, weight) VALUES (:date, :sets, :reps, :weight)"),
            [{  
                "date": TIME.strftime("%Y%M%d"),
                "sets": random.randrange(1,6), 
                "reps": random.randrange(1,15), 
                "weight": random.randrange(20,200)
            }]
        )
        conn.commit()

def read_from_table(table):

    db = get_engine()
    
    with db.connect() as conn:
        result = conn.execute(text(f"SELECT date,sets,reps,weight FROM {table}"))
        for row in result:
            print(f"date: {row.date} sets: {row.sets} reps: {row.sets} weight: {row.weight}") 
        conn.commit()

if __name__ == '__main__':
    #create_table("benchpress")
    insert_into_table("benchpress")
    read_from_table("benchpress")
#breakpoint()
